Connection Pool,
: 디비에 연결 하기 위한 자원 소모가 많음.
그래서, 매번 연결시마다 connection 만들기 보다,
미리 몇개를 만들어서, 재사용.
예시)
자바 String str = "lsy"
기본 문자열은 변경 불가.
str + "234", 새로운 문자열 생성, 새 메모리 또 사용했다.

StringBuffer, 변경가능.
str + "234", 기존 문자열에 추가. 기존 메모리 재사용.

종류가, 여러가지,
DBCP, C3PO, 라이브러리, 커넥션 풀 관련 기능들,
그중에서, HikariCP 라이브러리 이용해서,
접근시 자원을 소모를 줄이겠다.
재사용해서,
자원 효율적으로 사용가능, 성능도 좋아짐.

도구 이용하기 위해서, build.gradle 설치 후, 적용하기.

  //Hikari Cp 설치
    // https://mvnrepository.com/artifact/com.zaxxer/HikariCP
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '5.1.0'

    // https://mvnrepository.com/artifact/com.zaxxer/HikariCP
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '6.2.1'


