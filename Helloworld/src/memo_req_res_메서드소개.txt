HttpServlet 사용해서 이점
1) doGet() 화면 호출, doPost() 로직 처리.
필요한 메소드들을 오버라이드에서, get,post 구분 지어서 작업 가능.

2)  HttpServlet 상속을 받아서 사용해서,
톰캣(WAS:Web Application Server, 미들웨어서버,
중간에서 처리해서, 톰캣 컨테이너, 웹서버 기능도 포함)
내부에서 자동으로 객체를 생성하고, 관리해서, 개발자가 따로 신경 쓸 필요가 없음.

3)
HttpServlet 내부적으로 멀티 스레드 이용해서,
동시에 실행이 가능함. 동시 처리부분을 따로 고민 안해도 됨.
예시)통신 프로그램등(라이브러리, api) 보시면, 멀티 스레드가 고려해서 설계.

내부적으로, 기본,
라이프 사이클, 톰캣에서, 해당 서블릿 객체를
생성, init() 메서드 최초에 한번 호출,
사용, doGet(), doPost(), 사용자가 요청 할 때마다, 매번 호출이 됨.
소멸. destroy() , 서버가 종료시 한번 호출 되는 메서드,

자주 사용하는 메서드
1.
getParameter()
: 초반에 웹브라우저에서 넘어온 데이터 파라미터를 가져오는 역할.
예시) 현재에는, 낱개로, 데이터를 전달.
로그인, -> username, password,

나중에), DTO 모델 클래스 안에, username, password,
model 객체를 이용해서, 자동으로 , 멤버의 이름이 동일하면,
자동으로 클래스 속성으로 초기화가 됨.

2. getParametValues()
: 동일한 이름으로 넘어온 여러 데이터를 받을 때 사용함.
예시) 체크박스, 라디오 그룹, 같은 이름으로 설정 태그들,
키 : fruits, 값1: 바나나, 값2: 사과, 값3: 포도

3. setAttribute()
:JSP(화면)로 전달할 데이터를 추가할 때 사용함.

4.
RequestDispatcher 에서
forward():현재 까지의 모든 응답 내용을 무시하고, 작성한 내용만 전달. (더 많이 사용함.)
include():지금까지 만든 응답 내용 + jsp가 만든 내용,

